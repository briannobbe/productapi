<?xml version="1.0" encoding="UTF-8"?>
<l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
    <l7:References>
        <l7:Item>
            <l7:Name>LAC Service Policy Example Fragment - OAuth 2.0</l7:Name>
            <l7:Id>10b70f2299ec97f8caebbf51bac09481</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2017-05-31T12:37:18.562Z</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="54d1bff9-4e26-4983-8281-15c6b3256312"
                    id="10b70f2299ec97f8caebbf51bac09481" version="50">
                    <l7:PolicyDetail folderId="0000000000000000ffffffffffffec76"
                        guid="54d1bff9-4e26-4983-8281-15c6b3256312"
                        id="10b70f2299ec97f8caebbf51bac09481" version="50">
                        <l7:Name>LAC Service Policy Example Fragment - OAuth 2.0</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>50</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                                &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                                xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt; &lt;L7p:AuditAssertion/&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment stringValue="Still Need
                                to fix Error Codes"/&gt; &lt;/L7p:CommentAssertion&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment stringValue="Need to
                                add input for LAC Role to pass"/&gt; &lt;/L7p:CommentAssertion&gt;
                                &lt;L7p:ApiPortalEncassIntegration/&gt;
                                &lt;L7p:AuditDetailAssertion&gt; &lt;L7p:Detail stringValue="Policy
                                Fragment: LAC Service Policy Example Fragment - OAuth 2.0"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue=""/&gt; &lt;L7p:VariableToSet
                                stringValue="errorMsg"/&gt; &lt;/L7p:SetVariable&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression stringValue=""/&gt;
                                &lt;L7p:VariableToSet stringValue="httpReturnErrorCode"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="T0FVVEhfMg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="portal.analytics.authType"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHtwb3J0YWwubWFuYWdlZC5zZXJ2aWNlLmFwaUlkfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="portal.analytics.api.uuid"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue=""/&gt; &lt;L7p:VariableToSet
                                stringValue="portal.analytics.organization.name"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHtyZXF1ZXN0Lmh0dHAudXJpfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="portal.analytics.action"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:ExportVariables&gt;
                                &lt;L7p:ExportedVars stringArrayValue="included"&gt; &lt;L7p:item
                                stringValue="portal.analytics.action"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.api.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.authType"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:ExportedVars&gt; &lt;/L7p:ExportVariables&gt;
                                &lt;wsp:OneOrMore wsp:Usage="Required"&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${sslEnabled}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SslAssertion/&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="aHR0cHM="/&gt;
                                &lt;L7p:VariableToSet stringValue="inbound.http.proto"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // This branch is executed because SSL is supposed to
                                be enforced"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // If this assertion fires, SSL error, API will stop
                                processing and return error"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="U1NMIHJlcXVpcmVk"/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                                &lt;L7p:VariableToSet stringValue="httpReturnErrorCode"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="//enforce inbound SSL if API publisher checked setting
                                in portal when publishing API"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="aHR0cA=="/&gt; &lt;L7p:VariableToSet
                                stringValue="inbound.http.proto"/&gt; &lt;/L7p:SetVariable&gt;
                                &lt;L7p:TrueAssertion/&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // SSL was not required and request was sent over
                                http"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // This
                                branch controls SSL enforcement and sets var to indicate which
                                protocol was used"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:AssertionComment
                                assertionComment="included"&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // Set
                                forwarded Header to LAC to use for URL rewrite directives"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt; &lt;L7p:Base64Expression
                                stringValue="aG9zdD0iJHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLmhvc3R9IjsgcHJvdG89JHtpbmJvdW5kLmh0dHAucHJvdG99OyBjYS1sYWMtYmFzZXBhdGg9Ii8ke3NlcnZpY2VVcmx9Ig=="/&gt;
                                &lt;L7p:VariableToSet stringValue="forwardedHeaderValues"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${errorMsg}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:Operator
                                operator="EMPTY"/&gt; &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;L7p:CacheLookup&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // Lookup Swagger from Cache"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:CacheEntryKey stringValue="${serviceUrl}"/&gt;
                                &lt;L7p:CacheId stringValue="swaggerCache"/&gt;
                                &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                                &lt;L7p:MaxEntryAgeSeconds stringValue="${swaggercacheTTL}"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="swaggerDoc"/&gt;
                                &lt;L7p:Target target="OTHER"/&gt; &lt;/L7p:CacheLookup&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:AddHeader&gt; &lt;L7p:HeaderName
                                stringValue="Forwarded"/&gt; &lt;L7p:HeaderValue
                                stringValue="${forwardedHeaderValues}"/&gt; &lt;L7p:RemoveExisting
                                booleanValue="true"/&gt; &lt;/L7p:AddHeader&gt;
                                &lt;L7p:HttpRoutingAssertion&gt; &lt;L7p:FollowRedirects
                                booleanValue="true"/&gt; &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                                &lt;L7p:ProtectedServiceUrl stringValue="${apiLocation}/@docs"/&gt;
                                &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                                &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                                &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:ForwardAll booleanValue="true"/&gt; &lt;L7p:Rules
                                httpPassthroughRules="included"&gt; &lt;L7p:item
                                httpPassthroughRule="included"&gt; &lt;L7p:Name
                                stringValue="Cookie"/&gt; &lt;/L7p:item&gt; &lt;L7p:item
                                httpPassthroughRule="included"&gt; &lt;L7p:Name
                                stringValue="SOAPAction"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Rules&gt;
                                &lt;/L7p:RequestHeaderRules&gt; &lt;L7p:RequestParamRules
                                httpPassthroughRuleSet="included"&gt; &lt;L7p:ForwardAll
                                booleanValue="true"/&gt; &lt;L7p:Rules
                                httpPassthroughRules="included"/&gt; &lt;/L7p:RequestParamRules&gt;
                                &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:ForwardAll booleanValue="true"/&gt; &lt;L7p:Rules
                                httpPassthroughRules="included"&gt; &lt;L7p:item
                                httpPassthroughRule="included"&gt; &lt;L7p:Name
                                stringValue="Set-Cookie"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Rules&gt;
                                &lt;/L7p:ResponseHeaderRules&gt; &lt;L7p:ResponseMsgDest
                                stringValue="swaggerDoc"/&gt; &lt;/L7p:HttpRoutingAssertion&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // GET
                                the swagger from LAC"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="VW5hYmxlIHRvIG9idGFpbiBTd2FnZ2VyIERvY3VtZW50IGZyb20gTEFD"/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="NDA0"/&gt; &lt;L7p:DataType
                                variableDataType="int"/&gt; &lt;L7p:VariableToSet
                                stringValue="httpReturnErrorCode"/&gt; &lt;/L7p:SetVariable&gt;
                                &lt;L7p:FalseAssertion/&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // GET swagger from LAC failed, set error message for
                                return"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt;
                                &lt;/wsp:OneOrMore&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${errorMsg}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:Operator
                                operator="EMPTY"/&gt; &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:CacheStorage&gt;
                                &lt;L7p:CacheEntryKey stringValue="${serviceUrl}"/&gt;
                                &lt;L7p:CacheId stringValue="swaggerCache"/&gt; &lt;L7p:MaxEntries
                                stringValue="1"/&gt; &lt;L7p:MaxEntryAgeSeconds
                                stringValue="${swaggercacheTTL}"/&gt; &lt;L7p:MaxEntrySizeBytes
                                stringValue="1500000"/&gt; &lt;L7p:OtherTargetMessageVariable
                                stringValue="swaggerDoc"/&gt; &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:CacheStorage&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // GET swagger worked, now cache for TTL time"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" //
                                Invalid Cache, get swagger doc and cache"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt; &lt;/wsp:All&gt;
                                &lt;L7p:TrueAssertion/&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // This branch checks cache for swagger doc, and gets
                                it from LAC if invalid in cache"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:OneOrMore&gt; &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${errorMsg}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:Operator
                                operator="EMPTY"/&gt; &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${request.http.method}"/&gt; &lt;L7p:Expression2
                                stringValue="GET"/&gt; &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:RightValue stringValue="GET"/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:Regex&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt; &lt;L7p:CaseInsensitive
                                booleanValue="true"/&gt; &lt;L7p:IncludeEntireExpressionCapture
                                booleanValue="false"/&gt; &lt;L7p:OtherTargetMessageVariable
                                stringValue="request.http.uri"/&gt; &lt;L7p:Regex
                                stringValue="^.*/@docs$"/&gt; &lt;L7p:RegexName stringValue="Confirm
                                if Swagger Document Request"/&gt; &lt;L7p:Replacement
                                stringValue=""/&gt; &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${noAuthSwagger}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:HardcodedResponse&gt;
                                &lt;L7p:Base64ResponseBody stringValue="JHtzd2FnZ2VyRG9jfQ=="/&gt;
                                &lt;L7p:ResponseContentType stringValue="application/json"/&gt;
                                &lt;/L7p:HardcodedResponse&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // This branch will process unsecure GET for swagger
                                doc if allowed by publisher"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${errorMsg}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:Operator
                                operator="EMPTY"/&gt; &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${request.http.method}"/&gt; &lt;L7p:Expression2
                                stringValue="GET"/&gt; &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:RightValue stringValue="GET"/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:Regex&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt; &lt;L7p:CaseInsensitive
                                booleanValue="true"/&gt; &lt;L7p:IncludeEntireExpressionCapture
                                booleanValue="false"/&gt; &lt;L7p:OtherTargetMessageVariable
                                stringValue="request.http.uri"/&gt; &lt;L7p:Regex
                                stringValue="^.*/@docs$"/&gt; &lt;L7p:RegexName stringValue="Confirm
                                if Swagger Document Request"/&gt; &lt;L7p:Replacement
                                stringValue=""/&gt; &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${noAuthSwagger}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:RightValue
                                stringValue="false"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:Encapsulated&gt; &lt;L7p:EncapsulatedAssertionConfigGuid
                                stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require
                                OAuth 2.0 Token"/&gt; &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="cache_lifetime"/&gt;
                                &lt;L7p:value stringValue="0"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="given_access_token"/&gt;
                                &lt;L7p:value stringValue=""/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="onetime"/&gt;
                                &lt;L7p:value stringValue="false"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="scope_fail"/&gt;
                                &lt;L7p:value stringValue="false"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="scope_required"/&gt;
                                &lt;L7p:value stringValue=""/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt; &lt;/L7p:Encapsulated&gt;
                                &lt;L7p:HardcodedResponse&gt; &lt;L7p:Base64ResponseBody
                                stringValue="JHtzd2FnZ2VyRG9jfQ=="/&gt; &lt;L7p:ResponseContentType
                                stringValue="application/json"/&gt; &lt;/L7p:HardcodedResponse&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" //
                                Validate OAuth Token before returning swagger doc"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // If this assertion fires, OAuth Error, API will stop
                                processing and return error"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression
                                stringValue="SW52YWxpZCBvciBNaXNzaW5nIEJlYXJlciBUb2tlbg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="NDA0"/&gt;
                                &lt;L7p:VariableToSet stringValue="httpReturnErrorCode"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:FalseAssertion/&gt;
                                &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // This branch will process secure GET for swagger doc
                                if required by publisher"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${errorMsg}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:Operator
                                operator="EMPTY"/&gt; &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;L7p:Swagger&gt; &lt;L7p:ServiceBase
                                stringValue="/${serviceUrl}"/&gt; &lt;L7p:SwaggerDoc
                                stringValue="swaggerDoc"/&gt; &lt;/L7p:Swagger&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // If this assertion fires, Swagger Doc validation
                                error"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt; &lt;L7p:Base64Expression
                                stringValue="QVBJIHJlcXVlc3QgZG9lcyBub3QgbWF0Y2ggZGVmaW5pdGlvbg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="NDA0"/&gt;
                                &lt;L7p:VariableToSet stringValue="httpReturnErrorCode"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:FalseAssertion/&gt;
                                &lt;/wsp:All&gt; &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" //
                                Ensure API request is for valid resource as per Swagger
                                documentation"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:Encapsulated&gt; &lt;L7p:AssertionComment
                                assertionComment="included"&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="validateOAuthToken() "/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid
                                stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require
                                OAuth 2.0 Token"/&gt; &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="cache_lifetime"/&gt;
                                &lt;L7p:value stringValue="0"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="given_access_token"/&gt;
                                &lt;L7p:value stringValue=""/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="onetime"/&gt;
                                &lt;L7p:value stringValue="false"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="scope_fail"/&gt;
                                &lt;L7p:value stringValue="false"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="scope_required"/&gt;
                                &lt;L7p:value stringValue=""/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt; &lt;/L7p:Encapsulated&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment
                                stringValue="============================"/&gt;
                                &lt;/L7p:CommentAssertion&gt; &lt;L7p:CommentAssertion&gt;
                                &lt;L7p:Comment stringValue="= API Portal Integration components
                                below ="/&gt; &lt;/L7p:CommentAssertion&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment
                                stringValue="============================"/&gt;
                                &lt;/L7p:CommentAssertion&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="VW5hYmxlIHRvIHJvdXRlIEFQSQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:AssertionComment
                                assertionComment="included"&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="getRequestedApiResource()"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// capture the API resource
                                requested"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt; &lt;L7p:Base64Expression
                                stringValue="JHtyZXF1ZXN0Lmh0dHAudXJpfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="apiResource"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="getRequestApiKey()"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// parse API key from request"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt; &lt;L7p:Base64Expression
                                stringValue="JHtzZXNzaW9uLmNsaWVudF9pZH0="/&gt;
                                &lt;L7p:VariableToSet stringValue="lookupApiKey"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:Encapsulated&gt; &lt;L7p:EncapsulatedAssertionConfigGuid
                                stringValue="d6b48093-4288-44b3-977e-712fdac328e6"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Portal Look Up
                                API Key"/&gt; &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="apikey"/&gt;
                                &lt;L7p:value stringValue="${lookupApiKey}"/&gt; &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt; &lt;L7p:key stringValue="serviceid"/&gt;
                                &lt;L7p:value stringValue="${portal.managed.service.apiId}"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Parameters&gt; &lt;/L7p:Encapsulated&gt;
                                &lt;wsp:OneOrMore wsp:Usage="Required"&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${apiKeyRecord.found}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:RightValue
                                stringValue="true"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${apiKeyRecord.service}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:RightValue
                                stringValue="${portal.managed.service.apiId}"/&gt; &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt; &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${apiKeyRecord.status}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:RightValue
                                stringValue="active"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="apiAuthz"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthcGlrZXlSZWNvcmQueG1sfQ=="/&gt; &lt;L7p:ContentType
                                stringValue="text/xml; charset=utf-8"/&gt; &lt;L7p:DataType
                                variableDataType="message"/&gt; &lt;L7p:VariableToSet
                                stringValue="recordXml"/&gt; &lt;/L7p:SetVariable&gt;
                                &lt;L7p:ResponseXpathAssertion&gt; &lt;L7p:VariablePrefix
                                stringValue="customFieldsMetadata"/&gt; &lt;L7p:XmlMsgSrc
                                stringValue="recordXml"/&gt; &lt;L7p:XpathExpression
                                xpathExpressionValue="included"&gt; &lt;L7p:Expression
                                stringValue="/l7:ApiKey/l7:CustomMetaData"/&gt; &lt;L7p:Namespaces
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="s"/&gt; &lt;L7p:value
                                stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="l7"/&gt; &lt;L7p:value
                                stringValue="http://ns.l7tech.com/2012/04/api-management"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Namespaces&gt; &lt;L7p:XpathVersion
                                xpathVersion="XPATH_1_0"/&gt; &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHtjdXN0b21GaWVsZHNNZXRhZGF0YS5yZXN1bHR9"/&gt;
                                &lt;L7p:VariableToSet stringValue="customFieldsMetadata"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="// success - API key found"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="SW52YWxpZCBBUEkgS2V5"/&gt; &lt;L7p:VariableToSet
                                stringValue="errorMsg"/&gt; &lt;/L7p:SetVariable&gt;
                                &lt;L7p:FalseAssertion/&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="// error - API key not found"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="Step 1 --"/&gt; &lt;/L7p:entry&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="Lookup API Key"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQua2V5fQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="apiKey"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQucGxhbn0="/&gt;
                                &lt;L7p:VariableToSet stringValue="apiPlan"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQuYWNjb3VudFBsYW5NYXBwaW5nSWR9"/&gt;
                                &lt;L7p:VariableToSet stringValue="accountPlanMappingId"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="apiAuthz"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="Step 2 --"/&gt; &lt;/L7p:entry&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="// Capture API key and API method for metrics"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:CommentAssertion&gt;
                                &lt;L7p:Comment stringValue="The Account Plans Fragment must be
                                manually added here"/&gt; &lt;/L7p:CommentAssertion&gt;
                                &lt;L7p:Include&gt; &lt;L7p:PolicyGuid
                                stringValue="f8a5669d-831e-4417-9225-f52527f90323"/&gt;
                                &lt;/L7p:Include&gt; &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${apiAuthz}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:RightValue
                                stringValue="true"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="QWNjb3VudCBwbGFuIGxpbWl0IGV4Y2VlZGVkDQoNClJlYXNvbjogJHthcGlBdXRoekRldGFpbHN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${portal.analytics.response.code}"/&gt;
                                &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item stringLength="included"&gt; &lt;L7p:Max
                                intValue="-1"/&gt; &lt;L7p:Min intValue="1"/&gt; &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt; &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="NTAz"/&gt; &lt;L7p:VariableToSet
                                stringValue="portal.analytics.response.code"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQuYXBwbGljYXRpb25JZH0="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.application.uuid"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthY2NvdW50UGxhbk1hcHBpbmdJZH0="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.organization.uuid"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:ExportVariables&gt;
                                &lt;L7p:ExportedVars stringArrayValue="included"&gt; &lt;L7p:item
                                stringValue="portal.analytics.action"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.api.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.authType"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.response.code"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:ExportedVars&gt; &lt;/L7p:ExportVariables&gt;
                                &lt;L7p:FalseAssertion/&gt; &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value stringValue="Step 3
                                --"/&gt; &lt;/L7p:entry&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue="//
                                Enforce Account Plan restriction"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment stringValue="The API
                                Plans Fragment must be manually added here"/&gt;
                                &lt;/L7p:CommentAssertion&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${apiAuthz}"/&gt; &lt;L7p:Operator
                                operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:RightValue
                                stringValue="true"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:CustomizeErrorResponse&gt;
                                &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[API
                                plan limit exceeded Reason:
                                ${apiAuthzDetails}]]&gt;&lt;/L7p:Content&gt;
                                &lt;/L7p:CustomizeErrorResponse&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${portal.analytics.response.code}"/&gt;
                                &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item stringLength="included"&gt; &lt;L7p:Max
                                intValue="-1"/&gt; &lt;L7p:Min intValue="1"/&gt; &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt; &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="NTAz"/&gt; &lt;L7p:VariableToSet
                                stringValue="portal.analytics.response.code"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:ExportVariables&gt; &lt;L7p:ExportedVars
                                stringArrayValue="included"&gt; &lt;L7p:item
                                stringValue="portal.analytics.action"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.api.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.authType"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.response.code"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:ExportedVars&gt; &lt;/L7p:ExportVariables&gt;
                                &lt;L7p:FalseAssertion/&gt; &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="LEFT.COMMENT"/&gt; &lt;L7p:value stringValue="Step 4
                                --"/&gt; &lt;/L7p:entry&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue="//
                                Enforce API Plan restriction"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // This
                                branch is normal API Key Processing common to all portal
                                templates"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment
                                stringValue="==========================="/&gt;
                                &lt;/L7p:CommentAssertion&gt; &lt;L7p:CommentAssertion&gt;
                                &lt;L7p:Comment stringValue="= The rest of the service policy
                                follows ... ="/&gt; &lt;/L7p:CommentAssertion&gt;
                                &lt;L7p:CommentAssertion&gt; &lt;L7p:Comment
                                stringValue="==========================="/&gt;
                                &lt;/L7p:CommentAssertion&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${override_template_routing}"/&gt; &lt;L7p:Expression2
                                stringValue="true"/&gt; &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt; &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHtyZXF1ZXN0Lmh0dHAudXJpfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="param.uri"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:Regex&gt; &lt;L7p:AssertionComment
                                assertionComment="included"&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" //
                                Regex to remove Gateway specific URL"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="param.uri"/&gt;
                                &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                                &lt;L7p:Regex stringValue="/${serviceUrl}"/&gt; &lt;L7p:RegexName
                                stringValue="process uri"/&gt; &lt;L7p:Replace
                                booleanValue="true"/&gt; &lt;L7p:Replacement stringValue=""/&gt;
                                &lt;L7p:Target target="OTHER"/&gt; &lt;/L7p:Regex&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="ew0KICAgICJ1c2VySWRlbnRpZmllciI6ICIiLA0KICAgICJyb2xlcyI6IFsNCiAgICAgICAgIkFQSSBPd25lciINCiAgICBdDQp9"/&gt;
                                &lt;L7p:VariableToSet stringValue="x_ca_gateway_lac_header"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="aG9zdD0iJHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLmhvc3R9IjsgcHJvdG89JHtpbmJvdW5kLmh0dHAucHJvdG99OyBjYS1sYWMtYmFzZXBhdGg9Ii8ke3NlcnZpY2VVcmx9Ig=="/&gt;
                                &lt;L7p:VariableToSet stringValue="forwardedHeaderValues"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:EncodeDecode&gt;
                                &lt;L7p:SourceVariableName
                                stringValue="x_ca_gateway_lac_header"/&gt; &lt;L7p:TargetDataType
                                variableDataType="string"/&gt; &lt;L7p:TargetVariableName
                                stringValue="x_ca_gateway_lac_header_b64"/&gt; &lt;L7p:TransformType
                                transformType="BASE64_ENCODE"/&gt; &lt;/L7p:EncodeDecode&gt;
                                &lt;L7p:AddHeader&gt; &lt;L7p:HeaderName
                                stringValue="X-CA-Gateway-LAC"/&gt; &lt;L7p:HeaderValue
                                stringValue="${x_ca_gateway_lac_header_b64}"/&gt;
                                &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                                &lt;/L7p:AddHeader&gt; &lt;L7p:AddHeader&gt; &lt;L7p:HeaderName
                                stringValue="Forwarded"/&gt; &lt;L7p:HeaderValue
                                stringValue="${forwardedHeaderValues}"/&gt; &lt;L7p:RemoveExisting
                                booleanValue="true"/&gt; &lt;/L7p:AddHeader&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:HttpRoutingAssertion&gt; &lt;L7p:FailOnErrorStatus
                                booleanValue="false"/&gt; &lt;L7p:ProtectedServiceUrl
                                stringValue="${apiLocation}${param.uri}${request.url.query}"/&gt;
                                &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                                &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                                &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:ForwardAll booleanValue="true"/&gt; &lt;L7p:Rules
                                httpPassthroughRules="included"&gt; &lt;L7p:item
                                httpPassthroughRule="included"&gt; &lt;L7p:Name
                                stringValue="Cookie"/&gt; &lt;/L7p:item&gt; &lt;L7p:item
                                httpPassthroughRule="included"&gt; &lt;L7p:Name
                                stringValue="SOAPAction"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Rules&gt;
                                &lt;/L7p:RequestHeaderRules&gt; &lt;L7p:RequestParamRules
                                httpPassthroughRuleSet="included"&gt; &lt;L7p:ForwardAll
                                booleanValue="true"/&gt; &lt;L7p:Rules
                                httpPassthroughRules="included"/&gt; &lt;/L7p:RequestParamRules&gt;
                                &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:Rules httpPassthroughRules="included"&gt; &lt;L7p:item
                                httpPassthroughRule="included"&gt; &lt;L7p:Name
                                stringValue="Set-Cookie"/&gt; &lt;/L7p:item&gt; &lt;/L7p:Rules&gt;
                                &lt;/L7p:ResponseHeaderRules&gt; &lt;L7p:SamlAssertionVersion
                                intValue="2"/&gt; &lt;/L7p:HttpRoutingAssertion&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="JHtyZXNwb25zZS5odHRwLnN0YXR1c30="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.response.code"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // Call the API in LAC"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="JHtyZXNwb25zZS5odHRwLnN0YXR1c30="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.response.code"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="VW5hYmxlIHRvIHJvdXRlIHRvIEFQSS4="/&gt;
                                &lt;L7p:VariableToSet stringValue="errorMsg"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                                &lt;L7p:VariableToSet stringValue="httpReturnErrorCode"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt; &lt;L7p:CaseSensitive
                                booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${portal.analytics.response.code}"/&gt;
                                &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item stringLength="included"&gt; &lt;L7p:Max
                                intValue="-1"/&gt; &lt;L7p:Min intValue="1"/&gt; &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt; &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="NDA4"/&gt; &lt;L7p:VariableToSet
                                stringValue="portal.analytics.response.code"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:ExportVariables&gt; &lt;L7p:ExportedVars
                                stringArrayValue="included"&gt; &lt;L7p:item
                                stringValue="portal.analytics.action"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.api.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.authType"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.response.code"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:ExportedVars&gt; &lt;/L7p:ExportVariables&gt;
                                &lt;L7p:FalseAssertion/&gt; &lt;/wsp:All&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="JHtodHRwUm91dGluZy5sYXRlbmN5fQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="routingLatency"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHtyZXF1ZXN0LnJvdXRpbmdUb3RhbFRpbWV9"/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue="//Handle Routing"/&gt; &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt; &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt; &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // And
                                finally, if no errors, actually route the API request"/&gt;
                                &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // This
                                branch processes the actual API resource request if no errors so far
                                in policy"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt; &lt;wsp:All
                                wsp:Usage="Required"&gt; &lt;L7p:CustomizeErrorResponse&gt;
                                &lt;L7p:Content stringValue="${errorMsg}"/&gt; &lt;L7p:ExtraHeaders
                                nameValuePairArray="included"/&gt; &lt;L7p:HttpStatus
                                stringValue="${httpReturnErrorCode}"/&gt;
                                &lt;/L7p:CustomizeErrorResponse&gt; &lt;wsp:OneOrMore
                                wsp:Usage="Required"&gt; &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt; &lt;L7p:Expression1
                                stringValue="${portal.analytics.response.code}"/&gt;
                                &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt; &lt;L7p:Predicates
                                predicates="included"&gt; &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt; &lt;/L7p:item&gt;
                                &lt;L7p:item stringLength="included"&gt; &lt;L7p:Max
                                intValue="-1"/&gt; &lt;L7p:Min intValue="1"/&gt; &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt; &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="NDAw"/&gt; &lt;L7p:VariableToSet
                                stringValue="portal.analytics.response.code"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:ExportVariables&gt; &lt;L7p:ExportedVars
                                stringArrayValue="included"&gt; &lt;L7p:item
                                stringValue="portal.analytics.action"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.api.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.authType"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.response.code"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:ExportedVars&gt; &lt;/L7p:ExportVariables&gt;
                                &lt;L7p:FalseAssertion/&gt; &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt; &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value
                                stringValue=" // This branch will handle errors if previous ALL
                                branches falsified"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt; &lt;L7p:Properties
                                mapValue="included"&gt; &lt;L7p:entry&gt; &lt;L7p:key
                                stringValue="RIGHT.COMMENT"/&gt; &lt;L7p:value stringValue=" // This
                                branch handles the actual API request processing, only one branch
                                fires"/&gt; &lt;/L7p:entry&gt; &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt; &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:SetVariable&gt; &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQuaWR9"/&gt; &lt;L7p:VariableToSet
                                stringValue="portal.analytics.application.uuid"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQubGFiZWx9"/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.application.name"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthY2NvdW50UGxhbk1hcHBpbmdJZH0="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.organization.uuid"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression
                                stringValue="JHthcGlLZXlSZWNvcmQuYWNjb3VudFBsYW5NYXBwaW5nTmFtZX0="/&gt;
                                &lt;L7p:VariableToSet
                                stringValue="portal.analytics.organization.name"/&gt;
                                &lt;/L7p:SetVariable&gt; &lt;L7p:ExportVariables&gt;
                                &lt;L7p:ExportedVars stringArrayValue="included"&gt; &lt;L7p:item
                                stringValue="portal.analytics.action"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.api.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.application.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.authType"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.name"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.organization.uuid"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.response.code"/&gt; &lt;L7p:item
                                stringValue="portal.analytics.routingTotalTime"/&gt;
                                &lt;/L7p:ExportedVars&gt; &lt;/L7p:ExportVariables&gt;
                                &lt;/wsp:All&gt; &lt;/wsp:Policy&gt; </l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>LAC Service Policy Example - OAuth 2.0</l7:Name>
            <l7:Id>10b70f2299ec97f8caebbf51bac09464</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2017-05-31T12:37:18.563Z</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="10b70f2299ec97f8caebbf51bac09464" version="7">
                    <l7:Name>LAC Service Policy Example - OAuth 2.0</l7:Name>
                    <l7:Guid>59a19c87-e90b-4a95-9669-7ec4a9adaad6</l7:Guid>
                    <l7:PolicyReference id="10b70f2299ec97f8caebbf51bac09481"
                        resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>apiLocation</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Location of API (application calls are forwarded here)
                                *</l7:GuiLabel>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>override_template_routing</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel/>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>sslEnabled</l7:ArgumentName>
                            <l7:ArgumentType>boolean</l7:ArgumentType>
                            <l7:GuiLabel>Only Allow Inbound SSL to Gateway?</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>4</l7:Ordinal>
                            <l7:ArgumentName>serviceUrl</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>5</l7:Ordinal>
                            <l7:ArgumentName>portal.managed.service.apiId</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>6</l7:Ordinal>
                            <l7:ArgumentName>apiKeyRecord.applicationId</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>7</l7:Ordinal>
                            <l7:ArgumentName>portal.analytics.application.name</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>8</l7:Ordinal>
                            <l7:ArgumentName>portal.analytics.response.code</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>9</l7:Ordinal>
                            <l7:ArgumentName>noAuthSwagger</l7:ArgumentName>
                            <l7:ArgumentType>boolean</l7:ArgumentType>
                            <l7:GuiLabel>Allow Swagger without authentication?</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>10</l7:Ordinal>
                            <l7:ArgumentName>swaggercacheTTL</l7:ArgumentName>
                            <l7:ArgumentType>int</l7:ArgumentType>
                            <l7:GuiLabel>TTL of swagger doc cached from LAC</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>access_token</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiAuthzDetails</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKey</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKeyRecord.oauthCallbackUrl</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKeyRecord.oauthScope</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKeyRecord.oauthType</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKeyRecord.platform</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKeyRecord.secret</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiKeyRecord.version</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiPlan</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>apiResource</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>content-type</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>counter.id</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>counter.max</l7:ResultName>
                            <l7:ResultType>int</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>counter.period</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>counter.user</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>counter.value</l7:ResultName>
                            <l7:ResultType>int</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>customFieldsMetadata</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>customFieldsMetadata.count</l7:ResultName>
                            <l7:ResultType>int</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>customFieldsMetadata.element</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>customFieldsMetadata.elements</l7:ResultName>
                            <l7:ResultType>xml</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>customFieldsMetadata.found</l7:ResultName>
                            <l7:ResultType>boolean</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>customFieldsMetadata.results</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.code</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>errorMsg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>httpRouting.reasonCode</l7:ResultName>
                            <l7:ResultType>int</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>matchIndex</l7:ResultName>
                            <l7:ResultType>int</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>session.custom</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>session.expires_at</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>session.scope</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>session.subscriber_id</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>status</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="artifactVersion">
                            <l7:StringValue>aac9d74107e2011a39724c79be3502cbec3f4363</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Use this encap assertion for LAC services. This policy
                                template applies an OAuth 2 check to all API access calls, and is
                                appropriate for both two- and three-legged OAuth implementations.
                                Then after checking API key for access and SLA, the policy then adds
                                appropriate headers to Route Statement to call LAC API. The
                                following grant types are supported: Implicit, Client Credentials,
                                Resource Owner Password Credentials, and Authorization
                                Code.</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>polback16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>54d1bff9-4e26-4983-8281-15c6b3256312</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
    </l7:References>
    <l7:Mappings>
        <l7:Mapping action="NewOrExisting" srcId="10b70f2299ec97f8caebbf51bac09481"
            srcUri="https://ip-172-31-19-127.us-east-2.compute.internal:8443/restman/1.0/policies/10b70f2299ec97f8caebbf51bac09481"
            type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="10b70f2299ec97f8caebbf51bac09464"
            srcUri="https://ip-172-31-19-127.us-east-2.compute.internal:8443/restman/1.0/encapsulatedAssertions/10b70f2299ec97f8caebbf51bac09464"
            type="ENCAPSULATED_ASSERTION"/>
    </l7:Mappings>
</l7:Bundle>
